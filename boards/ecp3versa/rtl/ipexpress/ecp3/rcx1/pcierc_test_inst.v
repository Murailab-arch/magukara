//=============================================================================
// Verilog module generated by IPExpress    08/21/2007    16:22:41         
// Filename: USERNAME_inst.v                                          
// Copyright(c) 2005 Lattice Semiconductor Corporation. All rights reserved.   
//=============================================================================

/* WARNING - Changes to this file should be performed by re-running IPexpress
or modifying the .LPC file and regenerating the core.  Other changes may lead
to inconsistent simulation and/or implemenation results */

//------------------------------------------------
// USERNAME module instantiation template
//------------------------------------------------

pcierc_test u1_USERNAME (
   // Clock and Reset
   .refclkp(refclkp),
   .refclkn(refclkn),
   .sys_clk_125(sys_clk_125),
   .rst_n(rst_n),
   // ASIC side pins for PCSA.  These pins must exist for the PCS core.
   .hdinp0(hdinp0),
   .hdinn0(hdinn0),
   .hdoutp0(hdoutp0),
   .hdoutn0(hdoutn0),

   .phy_force_cntl(phy_force_cntl),
   .iphy_ltssm_cntl(iphy_ltssm_cntl),
   // Power Management Interface
   .tx_dllp_val(tx_dllp_val),
   .tx_pmtype(tx_pmtype),
   .tx_vsd_data(tx_vsd_data),
   // From TX user Interface  
   .tx_req_vc0(tx_req_vc0),
   .tx_data_vc0(tx_data_vc0),
   .tx_st_vc0(tx_st_vc0),
   .tx_end_vc0(tx_end_vc0),
   .tx_nlfy_vc0(tx_nlfy_vc0),
   .ph_buf_status_vc0(ph_buf_status_vc0),
   .pd_buf_status_vc0(pd_buf_status_vc0),
   .nph_buf_status_vc0(nph_buf_status_vc0),
   .npd_buf_status_vc0(npd_buf_status_vc0),
   .cplh_buf_status_vc0(cplh_buf_status_vc0),
   .cpld_buf_status_vc0(cpld_buf_status_vc0),
   .ph_processed_vc0(ph_processed_vc0),
   .pd_processed_vc0(pd_processed_vc0),
   .nph_processed_vc0(nph_processed_vc0),
   .npd_processed_vc0(npd_processed_vc0),
   .cplh_processed_vc0(cplh_processed_vc0),
   .cpld_processed_vc0(cpld_processed_vc0),
   .pd_num_vc0(pd_num_vc0),
   .npd_num_vc0(npd_num_vc0),
   .cpld_num_vc0(cpld_num_vc0),
   // User Loop back data
   .tx_lbk_data(tx_lbk_data),
   .tx_lbk_kcntl(tx_lbk_kcntl),
   .tx_lbk_rdy(tx_lbk_rdy),
   .rx_lbk_data(rx_lbk_data),
   .rx_lbk_kcntl(rx_lbk_kcntl),
   // Power Management/ Vendor specific DLLP
   .tx_dllp_sent(tx_dllp_sent),
   .rxdp_pmd_type(rxdp_pmd_type),
   .rxdp_vsd_data (rxdp_vsd_data),
   .rxdp_dllp_val(rxdp_dllp_val),
   // To TX User Interface
   .tx_rdy_vc0(tx_rdy_vc0),
   .tx_ca_ph_vc0(tx_ca_ph_vc0),
   .tx_ca_pd_vc0(tx_ca_pd_vc0),
   .tx_ca_nph_vc0(tx_ca_nph_vc0),
   .tx_ca_npd_vc0(tx_ca_npd_vc0),
   .tx_ca_cplh_vc0(tx_ca_cplh_vc0),
   .tx_ca_cpld_vc0(tx_ca_cpld_vc0),
   // To RX User Interface
   .rx_data_vc0(rx_data_vc0),
   .rx_st_vc0(rx_st_vc0),
   .rx_end_vc0(rx_end_vc0),
   .rx_pois_tlp_vc0 (rx_pois_tlp_vc0),
   .rx_malf_tlp_vc0 (rx_malf_tlp_vc0),
   // FROM DLL
   .dll_status(dll_status),
   // FROM PHY
   .phy_cfgln_sum(phy_cfgln_sum),
   .phy_pol_compliance(phy_pol_compliance),
   .phy_ltssm_state(phy_ltssm_state),
   .phy_ltssm_substate(phy_ltssm_substate),
   // FROM TRN
   .inta_n (inta_n),
   .intb_n (intb_n),
   .intc_n (intc_n),
   .intd_n (intd_n),
   .ftl_err_msg (ftl_err_msg),
   .nftl_err_msg (nftl_err_msg),
   .cor_err_msg(cor_err_msg)

);
